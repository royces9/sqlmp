#!/usr/bin/python

import argparse
import json
import os
import socket
import sys

import loadconf
import config
import remote_json as rj

import debug

"""
how to use:
$ sqlr -f $(file) -p $(playlist)

$(file) can be a directory or files or a list of files
$(playlist) is a playlist or a list of playlists

$ sqlr -c play-pause
$ sqlr -c pause

allows for basic playback control via sqlr

Note:
$ remote -f song_1.mp3 -p play_1 -f song_2.mp3 -p play_2

will add both song_1.mp3 and song_2.mp3 to both play_1 and play_2
"""


def main():
    if not os.path.exists(config.SOCKET):
        print('', end='')
        return

    parser = argparse.ArgumentParser()
    parser.add_argument('-f', help='directory, file, or list of files',
                        action='extend', nargs='+')
    parser.add_argument('-p', help='playlist or list of playlists',
                        action='extend', nargs='+');
    parser.add_argument('-c', help='takes "pause" and "play-pause" as arguments',
                        action='append', nargs='+')

    args = parser.parse_args()

    with socket.socket(socket.AF_UNIX, socket.SOCK_STREAM) as s:
        s.connect(config.SOCKET)
        msg = {'cmd': ''}
        
        if args.f:
            fn = [os.path.abspath(f) for f in args.f]
            if args.p:
                pl = args.p
            else:
                pl = [config.DEFAULT_PLAYLIST]

            msg = {'cmd': 'pl_add', 'playlist': pl, 'file': fn}
            
        elif args.c:
            val = args.c[0][0]

            if val in {'pause', 'play-pause'}:
                msg = {'cmd': val}

        rj.send(s, msg)
        data = rj.recv_raw(s)

        if not len(sys.argv) > 1:
            print(data.decode())


if __name__ == '__main__':
    main()
