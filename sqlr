#!/usr/bin/python

import os
import socket
import sys

import loadconf
import config

"""
how to use:
$ remote -f $(file) -p $(playlist)

$(file) can be a directory or files or a list of files
$(playlist) is a playlist or a list of playlists

Warning:
$ remote -f song_1.mp3 -p play_1 -f song_2.mp3 -p play_2

will add both song_1.mp3 and song_2.mp3 to both play_1 and play_2
"""

help_text = '\n'.join([
    '-h, --help     help',
    '-f             directory, file, or list of files',
    '-p             playlist or a list of playlists',
    '',
    'Warning:',
    '$ remote -f song_1.mp3 -p play_1 -f song_2.mp3 -p play_2',
    'will add both song_1.mp3 and song_2.mp3 to both play_1 and play_2',
    ])
    


def parse_args(argv):
    if not argv[0].startswith('-'):
        return '', ''

    args = []
    for arg in argv:
        if arg.startswith('-'):
            args.append([arg])
        else:
            args[-1].append(arg)

    pl = []
    fn = []

    #cwd = os.getcwd()
    for arg in args:
        if arg[0] == '-p':
            #playlist
            pl += [p for p in arg[1:]]
        elif arg[0] == '-f':
            #files or dir
            fn += [os.path.abspath(f) for f in arg[1:]]
            #fn += ['/'.join([cwd, f]) for f in arg[1:]]
        else:
            break

    return pl, fn

def main():
    if len(sys.argv) > 1 and sys.argv[1] in {'-h', '--help'}:
        print(help_text)
        return
    
    if not os.path.exists(config.SOCKET):
        print('', end='')
        return

    with socket.socket(socket.AF_UNIX, socket.SOCK_STREAM) as s:
        s.connect(config.SOCKET)
        if len(sys.argv) > 1:
            pl, fn = parse_args(sys.argv[1:])
            s.send('\n'.join(pl).encode())
            s.send(b'\n\n')
            s.send('\n'.join(fn).encode())
            #s.send(b'\n')
            s.recv(1024)

        else:
            s.send(b' \n\n ')
            data = s.recv(1024)
            print(data.decode('utf-8'), end='')

if __name__ == '__main__':
    main()
