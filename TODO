Things that I want to implement:

Play count:
- increment play count when something is done playing, 

Display:
- Need to find a way to make columns cleaner, it's kinda ugly right now
- also maybe consider putting bars or something to separate windows

Update:
- I'm pretty sure db.update() still doesn't work
  - update definitely does not work
- good way to test is create a dummy library I guess

remote queue:
- because disp.getkey() blocks, the queue stuff isn't executed until AFTER a key is pressed and executed
- possible problems:
  - remote doesn't execute/changes aren't visible, until a key is pressed
  - the remote issues a command that becomes obsolute because the user
    inputs something before the remote's command can be executed
    - quick 'n' ez solution: execute AFTER the remote's stuff gets executed
      - problem is we run into the same issue, but the other way around

- possible solution?:
  - run getkey() without blocking, instead, check if there was an input, and push it onto the queue
  - even worse version: have another thread with a blocking getkey call, have it push onto the queue
    the queue can block with get() in the main loop
    - these don't seem to work with resize, because the resize event gets triggered, things draw on screen,
      then the screen actually gets resized, causing a crash


jumping to current playing track
- it works but the algorithm is linear, which might be bad for longer playlists
  - O(lg(n)) alg is easy to implement (binary search), but O(1) is possible so go for that
    - probably just put another variable into player_disp that holds the current index (ugly...)

updating metadata of songs
- need a way to update song metadata singly

Bugs:
- when entering a command (with :), the cursor moves next to the current time playing

- there was a crash after pressing tab randomly, not sure what that is yet